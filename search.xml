<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>vue_router_001</title>
      <link href="/2022/07/12/vue_router_001/"/>
      <url>/2022/07/12/vue_router_001/</url>
      
        <content type="html"><![CDATA[<h3 id="在vue-cli中使用vue-router"><a href="#在vue-cli中使用vue-router" class="headerlink" title="在vue-cli中使用vue-router"></a>在<code>vue-cli</code>中使用<code>vue-router</code></h3><p>​新版本的<code>vue-cli</code>模板中自带<code>vue-router</code>，以下从模板中不带<code>vue-router</code>的情况开始说起   </p><ul><li><p>安装 <code>vue-router</code>：</p><pre class="line-numbers language-none"><code class="language-none">npm i --save vue-router@X<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>X 代表项目中使用 vue 的版本，如果是 vue2，则 X 只能以 2 开头，如</p><pre class="line-numbers language-none"><code class="language-none">npm i --save vue-router@2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>配置路由</p><ul><li><p>在 src 文件夹下创建 router 文件夹</p></li><li><p>在 router 文件夹中创建 index.js 文件，文件中代码示例如下</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>  <span class="token comment">// 引入 Vue</span><span class="token keyword">import</span> VueRouter <span class="token keyword">from</span> <span class="token string">'vue-router'</span><span class="token punctuation">;</span> <span class="token comment">// 引入 vue-router</span><span class="token comment">// 引入路由组件</span><span class="token keyword">import</span> Home <span class="token keyword">from</span> <span class="token string">'views/Home'</span><span class="token punctuation">;</span><span class="token keyword">import</span> Login <span class="token keyword">from</span> <span class="token string">'views/Login'</span><span class="token punctuation">;</span><span class="token comment">// Vue 全局使用 Router</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VueRouter<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 配置路由</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  <span class="token literal-property property">routes</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>      <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">'/home'</span><span class="token punctuation">,</span>    <span class="token comment">//路由访问路径</span>      <span class="token literal-property property">component</span><span class="token operator">:</span> Home<span class="token punctuation">,</span>  <span class="token comment">// 对应组件</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>      <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">'/login'</span><span class="token punctuation">,</span>      <span class="token literal-property property">component</span><span class="token operator">:</span> Login<span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token comment">// 路由重定向，重定向根页面 '/' 至想要的路由组件</span>    <span class="token punctuation">{</span>      <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>      <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token string">'/home'</span>    <span class="token punctuation">}</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>引入路由</p><p>在配置完路由信息后，要想使用路由，还需要在 vue 中引入配置好的路由，在 src/main.js 中写入如下代码：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">'./App.vue'</span><span class="token comment">// 引入路由配置信息</span><span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">'@/router/index'</span>Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>productionTip <span class="token operator">=</span> <span class="token boolean">false</span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token parameter">h</span> <span class="token operator">=&gt;</span> <span class="token function">h</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">// 将路由注册至 vue</span>  router<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>路由注册后，所有的 vue 组件中都可以访问到 $route、$router 属性：</p><ul><li>$route：某个路由组件的信息（路径、query、params等）</li><li>$router：整个路由器的信息（历史路径、编程导航等）</li></ul></li></ul><h3 id="vue-router的基本使用"><a href="#vue-router的基本使用" class="headerlink" title="vue-router的基本使用"></a><code>vue-router</code>的基本使用</h3><ul><li><p>路由的跳转</p><ul><li><p>声明式导航：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>router<span class="token operator">-</span>link to<span class="token operator">=</span><span class="token string">"/search"</span><span class="token operator">&gt;</span>跳转到search<span class="token operator">&lt;</span><span class="token operator">/</span>router<span class="token operator">-</span>link<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>to 属性是将要跳转的路由路径</p></li><li><p>编程式导航</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'/search'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'/search'</span><span class="token punctuation">)</span><span class="token operator">...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><p>参数传递</p><ul><li><p>params ：</p><ul><li><p>参数会显示在地址栏中</p></li><li><p>字符串形式下需要在路由配置中提前占位  </p></li><li><p>对象形式下，如果需要传递 params 参数，需要在路由配置中为该路由起一个别名 name，相应地，函数中使用 name 而不是 path。即：对象形式下，path 和 params 不能共存，否则会出现错误。<a href="https://router.vuejs.org/zh/guide/essentials/navigation.html#%E5%AF%BC%E8%88%AA%E5%88%B0%E4%B8%8D%E5%90%8C%E7%9A%84%E4%BD%8D%E7%BD%AE">编程式导航 | Vue Router (vuejs.org)</a></p></li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 占位配置</span><span class="token comment">// router/index.js</span><span class="token punctuation">{</span>    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">'/search/:searchWord'</span><span class="token punctuation">,</span>     <span class="token literal-property property">component</span><span class="token operator">:</span> Search<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment">// 传参</span><span class="token comment">// views/Header/index.vue/script</span><span class="token function">jumpSearch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">// 普通字符串形式</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'/search/'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>searchWord<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 模板字符串形式</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/search/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>searchWord<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token comment">// 对象形式</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'search'</span><span class="token punctuation">,</span>            <span class="token comment">// 使用 name 时：</span>                <span class="token comment">// 如果路由配置中 params 参数占位字符后没有 '?'，则配置的参数必须传递，否则会报错</span>                <span class="token comment">// 添加 '?' 则代表该参数可传可不传</span>            <span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">{</span>                <span class="token literal-property property">searchWord</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">,</span>searchWord<span class="token punctuation">,</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token comment">// 错误写法</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">'/search'</span><span class="token punctuation">,</span>            <span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">{</span>                <span class="token literal-property property">searchWord</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">,</span>searchWord<span class="token punctuation">,</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment">// 取参</span><span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>params<span class="token punctuation">.</span>searchWord<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>query：</p><p>直接在代码中书写，参数不会直接显示在页面上，</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// views/Header/index.vue/script</span><span class="token function">jumpSearch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">// 普通字符串形式</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'/search?searchWord='</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>searchWord<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 模板字符串形式</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/search?searchWord=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>searchWord<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token comment">// 对象形式</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'search'</span><span class="token punctuation">,</span>        <span class="token literal-property property">query</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token literal-property property">searchWord</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">,</span>searchWord<span class="token punctuation">,</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">'/search'</span><span class="token punctuation">,</span>        <span class="token literal-property property">query</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token literal-property property">searchWord</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">,</span>searchWord<span class="token punctuation">,</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment">// 取参</span><span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>query<span class="token punctuation">.</span>searchWord<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul></li></ul></li><li><p>路由元信息的使用</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">{</span>    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">'/register'</span><span class="token punctuation">,</span>    <span class="token literal-property property">component</span><span class="token operator">:</span> Register<span class="token punctuation">,</span>    <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token literal-property property">hiddenFooter</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里的 meta 用来定义针对该路由的一些配置信息，可以在对应组件中通过以下方式访问</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token function">hiddenFooter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>hiddenFooter    <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Footer</span> <span class="token attr-name">v-show</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>!hiddenFooter<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Footer</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h3 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h3><ul><li><p>对象传参形式下，params 是否可以传空字符串？</p><blockquote><p>可以，但需写成如下方式，否则地址栏路径会出错</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"> <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>     <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'search'</span><span class="token punctuation">,</span>     <span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">{</span>         <span class="token literal-property property">searchWord</span><span class="token operator">:</span> <span class="token string">''</span> <span class="token operator">||</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">+</span> 路由传参可以使用 props 接收吗？可以，有三种配置方法：<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span>`javascript<span class="token comment">// router/index.js</span><span class="token punctuation">{</span>    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">'/search/:searchWord'</span><span class="token punctuation">,</span>     <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'search'</span><span class="token punctuation">,</span>    <span class="token literal-property property">component</span><span class="token operator">:</span> Search<span class="token punctuation">,</span>   <span class="token comment">// 1.路由携带参数可以在 props 中访问到</span>    <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token comment">// 2.传递给组件的 props 一些自定义参数</span>    <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token comment">// 3.上面两种的结合</span>    <span class="token function-variable function">props</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">$route</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>        <span class="token literal-property property">searchWord</span><span class="token operator">:</span> $route<span class="token punctuation">.</span>params<span class="token punctuation">.</span>searchWord<span class="token punctuation">,</span>        <span class="token literal-property property">haha</span><span class="token operator">:</span> $route<span class="token punctuation">.</span>query<span class="token punctuation">.</span>haha<span class="token punctuation">,</span>        <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>        <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote></li><li><p>解决编程式导航 参数不变多次跳转路由报错的问题 <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=10&amp;vd_source=6c767eb490d724d2450c3cccdfdd300a&amp;t=1117.6">bilibili尚硅谷VUE项目实战，前端项目-尚品汇</a></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// router/index.js</span><span class="token comment">// 1. 直接捕获错误</span><span class="token keyword">const</span> originalPush <span class="token operator">=</span> <span class="token class-name">VueRouter</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>push<span class="token punctuation">;</span><span class="token class-name">VueRouter</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">push</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">push</span><span class="token punctuation">(</span><span class="token parameter">location</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token function">originalPush</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> location<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> err<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">// 2. 检查使用 push 或 replace 时，是否传入了 promise 处理函数，如果没有，就加上。</span><span class="token keyword">const</span> originalReplace <span class="token operator">=</span> <span class="token class-name">VueRouter</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>replace<span class="token punctuation">;</span><span class="token class-name">VueRouter</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">replace</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">replace</span><span class="token punctuation">(</span><span class="token parameter">location<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>resolve <span class="token operator">||</span> reject<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">originalReplace</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> location<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token function">originalReplace</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> location<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
          <category> vue-router </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> vue-router </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-cli4目录结构</title>
      <link href="/2022/07/12/sggsph0001/"/>
      <url>/2022/07/12/sggsph0001/</url>
      
        <content type="html"><![CDATA[<ul><li>原目录：<ul><li>node_modules：项目依赖文件夹</li><li>public：一般放置一些静态资源（图片），webpack 在打包时会将此文件夹中的内容原封不动打包至 dist 文件夹 </li><li>src（源代码文件夹）：<ul><li>assets：一般放置一些静态资源（多个组件共用），webpack 打包时会把此文件夹中的内容当作一个模块打包至 js 文件夹</li><li>components：一般放置非路由组件（全局组件）</li><li>App.vue：项目唯一根组件</li><li>main.js：程序的入口文件，也是整个程序中最先执行的文件</li></ul></li><li>.gitgnore：代码提交至仓库时忽略文件配置</li><li>babel.config.js：babel 配置文件</li><li>package.json：项目配置文件，记录项目信息、项目依赖、项目如何运行</li><li>package-lock.json：缓存行文件，记录所有安装包的信息。</li><li>README.md：说明性文件，告诉他人如何使用本项目。</li></ul></li><li>添加目录<ul><li>vue.config.js：vue-cli 中的 webpack 配置文件。(<a href="https://cli.vuejs.org/zh/config/">配置参考 | Vue CLI (vuejs.org)</a>)</li><li>jsconfig.json：目录中存在<code>jsconfig.json</code>文件表示改目录是JavaScript项目的根目录。<code>jsconfig.json</code>的配置可以对你的文件所在目录下的所有 js 代码做出<strong>个性化支持</strong>。<a href="https://juejin.cn/post/7004748084374831117">你需要知道jsconfig.json 都在这里啦 - 掘金 (juejin.cn)</a></li><li>src<ul><li>pages|views：放置路由组件</li><li>router：路由配置文件夹</li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
          <category> examples </category>
          
          <category> sgg_sph </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue2 </tag>
            
            <tag> vue-cli4 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>first</title>
      <link href="/2022/07/11/first/"/>
      <url>/2022/07/11/first/</url>
      
        <content type="html"><![CDATA[<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><hr><p>人生若只如初见，何事秋风悲画扇。  </p><p>等闲变却故人心，却道故人心易变。 </p><hr><p><em>斜体文本</em></p><hr><p><strong>粗体文本</strong></p><p><em><strong>粗斜体文本</strong></em></p><p><del>删除线</del></p><p><u>下划线</u></p><p>脚注[^脚注]</p><ul><li><p>北京</p></li><li><p>上海</p><ol><li>杨浦<ul><li>上海理工</li><li>复旦</li><li>同济</li></ul></li><li>闵行</li><li>徐汇</li></ol></li><li><p>广州</p></li><li><p>深圳</p></li></ul><blockquote><p>区块</p><p>区块</p><blockquote><p>区块中的列表</p><ol><li>哦吼吼</li><li>啊哈哈</li></ol></blockquote></blockquote><p><code>printf()</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'body main'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'i was clicked!'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><p><a href="https://www.baidu.com/">百度</a>一下你就知道</p><p><a href="http://jintaojt6.top/">http://jintaojt6.top</a></p><p><a href="http://www.google.com/">google</a></p><img src="http://static.runoob.com/images/runoob-logo.png" width="50%"><table><thead><tr><th align="center">序号</th><th align="center">城市</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">北京</td></tr><tr><td align="center">2</td><td align="center">上海</td></tr><tr><td align="center">3</td><td align="center">广州</td></tr><tr><td align="center">4</td><td align="center">深圳</td></tr></tbody></table><p>$$<br>\begin{Bmatrix}<br>    a &amp; b \\ c &amp; d \\ e &amp; f<br>\end{Bmatrix}<br>$$</p><p><span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><p><span class="github-emoji"><span>😢</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f622.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><p><span class="github-emoji"><span>😠</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f620.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
